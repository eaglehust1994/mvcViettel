
package com.viettel.passport;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "passportWS", targetNamespace = "http://passport.viettel.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface PassportWS {


    /**
     * 
     * @param password
     * @param domainCode
     * @param userName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "validate", targetNamespace = "http://passport.viettel.com/", className = "com.viettel.passport.Validate")
    @ResponseWrapper(localName = "validateResponse", targetNamespace = "http://passport.viettel.com/", className = "com.viettel.passport.ValidateResponse")
    @Action(input = "http://passport.viettel.com/passportWS/validateRequest", output = "http://passport.viettel.com/passportWS/validateResponse")
    public String validate(
        @WebParam(name = "userName", targetNamespace = "")
        String userName,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "domainCode", targetNamespace = "")
        String domainCode);

    /**
     * 
     * @param actor
     * @param staffCode
     * @param cmt
     * @return
     *     returns com.viettel.passport.Response
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUserInfo", targetNamespace = "http://passport.viettel.com/", className = "com.viettel.passport.GetUserInfo")
    @ResponseWrapper(localName = "getUserInfoResponse", targetNamespace = "http://passport.viettel.com/", className = "com.viettel.passport.GetUserInfoResponse")
    @Action(input = "http://passport.viettel.com/passportWS/getUserInfoRequest", output = "http://passport.viettel.com/passportWS/getUserInfoResponse")
    public Response getUserInfo(
        @WebParam(name = "staffCode", targetNamespace = "")
        String staffCode,
        @WebParam(name = "cmt", targetNamespace = "")
        String cmt,
        @WebParam(name = "actor", targetNamespace = "")
        Actor actor);

    /**
     * 
     * @param domainCode
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAppFunctions", targetNamespace = "http://passport.viettel.com/", className = "com.viettel.passport.GetAppFunctions")
    @ResponseWrapper(localName = "getAppFunctionsResponse", targetNamespace = "http://passport.viettel.com/", className = "com.viettel.passport.GetAppFunctionsResponse")
    @Action(input = "http://passport.viettel.com/passportWS/getAppFunctionsRequest", output = "http://passport.viettel.com/passportWS/getAppFunctionsResponse")
    public String getAppFunctions(
        @WebParam(name = "domainCode", targetNamespace = "")
        String domainCode);

    /**
     * 
     * @param password
     * @param domainCode
     * @param userName
     * @param ipCheck
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "validateIncludeIp", targetNamespace = "http://passport.viettel.com/", className = "com.viettel.passport.ValidateIncludeIp")
    @ResponseWrapper(localName = "validateIncludeIpResponse", targetNamespace = "http://passport.viettel.com/", className = "com.viettel.passport.ValidateIncludeIpResponse")
    @Action(input = "http://passport.viettel.com/passportWS/validateIncludeIpRequest", output = "http://passport.viettel.com/passportWS/validateIncludeIpResponse")
    public String validateIncludeIp(
        @WebParam(name = "userName", targetNamespace = "")
        String userName,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "domainCode", targetNamespace = "")
        String domainCode,
        @WebParam(name = "ipCheck", targetNamespace = "")
        String ipCheck);

    /**
     * 
     * @param domainCode
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRolesOfApp", targetNamespace = "http://passport.viettel.com/", className = "com.viettel.passport.GetRolesOfApp")
    @ResponseWrapper(localName = "getRolesOfAppResponse", targetNamespace = "http://passport.viettel.com/", className = "com.viettel.passport.GetRolesOfAppResponse")
    @Action(input = "http://passport.viettel.com/passportWS/getRolesOfAppRequest", output = "http://passport.viettel.com/passportWS/getRolesOfAppResponse")
    public String getRolesOfApp(
        @WebParam(name = "domainCode", targetNamespace = "")
        String domainCode);

    /**
     * 
     * @param actor
     * @param repeatPass
     * @param newPass
     * @param language
     * @param userName
     * @return
     *     returns com.viettel.passport.Response
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "changePassWithoutCheckOldPass", targetNamespace = "http://passport.viettel.com/", className = "com.viettel.passport.ChangePassWithoutCheckOldPass")
    @ResponseWrapper(localName = "changePassWithoutCheckOldPassResponse", targetNamespace = "http://passport.viettel.com/", className = "com.viettel.passport.ChangePassWithoutCheckOldPassResponse")
    @Action(input = "http://passport.viettel.com/passportWS/changePassWithoutCheckOldPassRequest", output = "http://passport.viettel.com/passportWS/changePassWithoutCheckOldPassResponse")
    public Response changePassWithoutCheckOldPass(
        @WebParam(name = "userName", targetNamespace = "")
        String userName,
        @WebParam(name = "newPass", targetNamespace = "")
        String newPass,
        @WebParam(name = "repeatPass", targetNamespace = "")
        String repeatPass,
        @WebParam(name = "language", targetNamespace = "")
        String language,
        @WebParam(name = "actor", targetNamespace = "")
        Actor actor);

    /**
     * 
     * @param repeatPass
     * @param newPass
     * @param userName
     * @param oldPass
     * @return
     *     returns com.viettel.passport.Response
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "changePass", targetNamespace = "http://passport.viettel.com/", className = "com.viettel.passport.ChangePass")
    @ResponseWrapper(localName = "changePassResponse", targetNamespace = "http://passport.viettel.com/", className = "com.viettel.passport.ChangePassResponse")
    @Action(input = "http://passport.viettel.com/passportWS/changePassRequest", output = "http://passport.viettel.com/passportWS/changePassResponse")
    public Response changePass(
        @WebParam(name = "userName", targetNamespace = "")
        String userName,
        @WebParam(name = "oldPass", targetNamespace = "")
        String oldPass,
        @WebParam(name = "newPass", targetNamespace = "")
        String newPass,
        @WebParam(name = "repeatPass", targetNamespace = "")
        String repeatPass);

    /**
     * 
     * @param actor
     * @param isCheckOnly
     * @param users
     * @return
     *     returns com.viettel.passport.Response
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createUsers", targetNamespace = "http://passport.viettel.com/", className = "com.viettel.passport.CreateUsers")
    @ResponseWrapper(localName = "createUsersResponse", targetNamespace = "http://passport.viettel.com/", className = "com.viettel.passport.CreateUsersResponse")
    @Action(input = "http://passport.viettel.com/passportWS/createUsersRequest", output = "http://passport.viettel.com/passportWS/createUsersResponse")
    public Response createUsers(
        @WebParam(name = "actor", targetNamespace = "")
        Actor actor,
        @WebParam(name = "users", targetNamespace = "")
        List<UserInfo> users,
        @WebParam(name = "isCheckOnly", targetNamespace = "")
        boolean isCheckOnly);

    /**
     * 
     * @param actor
     * @param deptCode
     * @return
     *     returns com.viettel.passport.Response
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDepartmentTree", targetNamespace = "http://passport.viettel.com/", className = "com.viettel.passport.GetDepartmentTree")
    @ResponseWrapper(localName = "getDepartmentTreeResponse", targetNamespace = "http://passport.viettel.com/", className = "com.viettel.passport.GetDepartmentTreeResponse")
    @Action(input = "http://passport.viettel.com/passportWS/getDepartmentTreeRequest", output = "http://passport.viettel.com/passportWS/getDepartmentTreeResponse")
    public Response getDepartmentTree(
        @WebParam(name = "actor", targetNamespace = "")
        Actor actor,
        @WebParam(name = "deptCode", targetNamespace = "")
        String deptCode);

    /**
     * 
     * @param secretPassword
     * @param repeatPass
     * @param isConfirmSecretPassword
     * @param newPass
     * @param userName
     * @return
     *     returns com.viettel.passport.Response
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "resetForgetPassword", targetNamespace = "http://passport.viettel.com/", className = "com.viettel.passport.ResetForgetPassword")
    @ResponseWrapper(localName = "resetForgetPasswordResponse", targetNamespace = "http://passport.viettel.com/", className = "com.viettel.passport.ResetForgetPasswordResponse")
    @Action(input = "http://passport.viettel.com/passportWS/resetForgetPasswordRequest", output = "http://passport.viettel.com/passportWS/resetForgetPasswordResponse")
    public Response resetForgetPassword(
        @WebParam(name = "userName", targetNamespace = "")
        String userName,
        @WebParam(name = "secretPassword", targetNamespace = "")
        String secretPassword,
        @WebParam(name = "newPass", targetNamespace = "")
        String newPass,
        @WebParam(name = "repeatPass", targetNamespace = "")
        String repeatPass,
        @WebParam(name = "isConfirmSecretPassword", targetNamespace = "")
        boolean isConfirmSecretPassword);

    /**
     * 
     * @param actor
     * @param otpCode
     * @param language
     * @param userName
     * @return
     *     returns com.viettel.passport.Response
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "authenOTPMultiFactor", targetNamespace = "http://passport.viettel.com/", className = "com.viettel.passport.AuthenOTPMultiFactor")
    @ResponseWrapper(localName = "authenOTPMultiFactorResponse", targetNamespace = "http://passport.viettel.com/", className = "com.viettel.passport.AuthenOTPMultiFactorResponse")
    @Action(input = "http://passport.viettel.com/passportWS/authenOTPMultiFactorRequest", output = "http://passport.viettel.com/passportWS/authenOTPMultiFactorResponse")
    public Response authenOTPMultiFactor(
        @WebParam(name = "userName", targetNamespace = "")
        String userName,
        @WebParam(name = "OTPCode", targetNamespace = "")
        String otpCode,
        @WebParam(name = "actor", targetNamespace = "")
        Actor actor,
        @WebParam(name = "language", targetNamespace = "")
        String language);

    /**
     * 
     * @param actor
     * @param language
     * @param userName
     * @return
     *     returns com.viettel.passport.Response
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getOTPCodeMultiFactor", targetNamespace = "http://passport.viettel.com/", className = "com.viettel.passport.GetOTPCodeMultiFactor")
    @ResponseWrapper(localName = "getOTPCodeMultiFactorResponse", targetNamespace = "http://passport.viettel.com/", className = "com.viettel.passport.GetOTPCodeMultiFactorResponse")
    @Action(input = "http://passport.viettel.com/passportWS/getOTPCodeMultiFactorRequest", output = "http://passport.viettel.com/passportWS/getOTPCodeMultiFactorResponse")
    public Response getOTPCodeMultiFactor(
        @WebParam(name = "userName", targetNamespace = "")
        String userName,
        @WebParam(name = "actor", targetNamespace = "")
        Actor actor,
        @WebParam(name = "language", targetNamespace = "")
        String language);

    /**
     * 
     * @param password
     * @param domainCode
     * @param userName
     * @return
     *     returns com.viettel.passport.Response
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "authen", targetNamespace = "http://passport.viettel.com/", className = "com.viettel.passport.Authen")
    @ResponseWrapper(localName = "authenResponse", targetNamespace = "http://passport.viettel.com/", className = "com.viettel.passport.AuthenResponse")
    @Action(input = "http://passport.viettel.com/passportWS/authenRequest", output = "http://passport.viettel.com/passportWS/authenResponse")
    public Response authen(
        @WebParam(name = "userName", targetNamespace = "")
        String userName,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "domainCode", targetNamespace = "")
        String domainCode);

    /**
     * 
     * @param fromDate
     * @param actor
     * @param toDate 
     * @param isDetailInfo
     * @param appCode
     * @param userName
     * @return
     *     returns com.viettel.passport.Response
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "reportLogin", targetNamespace = "http://passport.viettel.com/", className = "com.viettel.passport.ReportLogin")
    @ResponseWrapper(localName = "reportLoginResponse", targetNamespace = "http://passport.viettel.com/", className = "com.viettel.passport.ReportLoginResponse")
    @Action(input = "http://passport.viettel.com/passportWS/reportLoginRequest", output = "http://passport.viettel.com/passportWS/reportLoginResponse")
    public Response reportLogin(
        @WebParam(name = "appCode", targetNamespace = "")
        String appCode,
        @WebParam(name = "userName", targetNamespace = "")
        String userName,
        @WebParam(name = "fromDate", targetNamespace = "")
        String fromDate,
        @WebParam(name = "toDate", targetNamespace = "")
        String toDate,
        @WebParam(name = "isDetailInfo", targetNamespace = "")
        boolean isDetailInfo,
        @WebParam(name = "actor", targetNamespace = "")
        Actor actor);

    /**
     * 
     * @param actor
     * @param userName
     * @return
     *     returns com.viettel.passport.Response
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkExistUser", targetNamespace = "http://passport.viettel.com/", className = "com.viettel.passport.CheckExistUser")
    @ResponseWrapper(localName = "checkExistUserResponse", targetNamespace = "http://passport.viettel.com/", className = "com.viettel.passport.CheckExistUserResponse")
    @Action(input = "http://passport.viettel.com/passportWS/checkExistUserRequest", output = "http://passport.viettel.com/passportWS/checkExistUserResponse")
    public Response checkExistUser(
        @WebParam(name = "userName", targetNamespace = "")
        String userName,
        @WebParam(name = "actor", targetNamespace = "")
        Actor actor);

    /**
     * 
     * @param userName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllowedApp", targetNamespace = "http://passport.viettel.com/", className = "com.viettel.passport.GetAllowedApp")
    @ResponseWrapper(localName = "getAllowedAppResponse", targetNamespace = "http://passport.viettel.com/", className = "com.viettel.passport.GetAllowedAppResponse")
    @Action(input = "http://passport.viettel.com/passportWS/getAllowedAppRequest", output = "http://passport.viettel.com/passportWS/getAllowedAppResponse")
    public String getAllowedApp(
        @WebParam(name = "userName", targetNamespace = "")
        String userName);

}
